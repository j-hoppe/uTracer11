       1                                
       2                                		.TITLE	MOVER
       3                                
       4                                	.asect
       5 001000                         	.=1000	      ;
       6                                
       7                                HELLO:
       8                                
       9                                     ;	 MOV	 #sgnon,R1	 ;STARTING ADDRESS OF STRING
      10                                      ;  mov	 pc,r3		 ; ret addr
      11                                       ; br	 PMSG
      12                                  ; move
      13 001000 012702  002000          	  mov #2000, r2
      14 001004 012700  010000          	  mov #10000,r0
      15 001010 012701  006000          	 mov #6000,r1
      16                                
      17                                lbl1:
      18                                
      19 001014 012021                  	  mov (r0)+,(r1)+
      20                                
      21 001016 005302                  	  dec r2
      22 001020 001375                  	  bne lbl1
      23                                
      24 001022 012702  000400          	  mov #400, r2
      25 001026 012700  010000          	  mov #10000,r0
      26                                lbl2:
      27 001032 012720  000777          	  mov #777,(r0)+
      28 001036 005302                  	  dec r2
      29 001040 001374                  	  bne lbl2
      30                                
      31 001042 012701  006020          	  mov  #6020,r1
      32 001046 000111                  	  jmp (r1)
      33 001050 000000                  	halt
      34                                
      35                                ;---------------------------------------
      36                                ; PMSG PutMessage to console
      37                                ;
      38                                ;	input:	R1	pointer to Message
      39                                ;		R3	return address
      40                                ;	uses:	R0	for console output address
      41                                ;		R5 Console xmit buffer
      42                                ;	howto call:
      43                                ;
      44                                ;
      45                                ;
      46                                ;------------------------------------------
      47                                	; kbs = 177560
      48                                	; xbuf= 177566
      49                                	; xbuf control = 177564
      50 000015                         CR=15
      51 000012                         LF=12
      52                                
      53                                PMSG:
      54 001052 012705  177560          		mov	#177560,r5	; console xbuf addr in r5
      55                                
      56 001056 112100                  PMSG1:	MOVB	(R1)+,R0		;FETCH NEXT CHARACTER
      57 001060 001406                  		BEQ	PMSGE			;IF ZERO, EXIT LOOP
      58 001062 105765  000004          PMSG2:	tstb	4(r5)		; wait for xmit buffer available
      59 001066 100375                  		bpl	PMSG2			; br if not yet
      60 001070 110065  000006          	movb	r0,6(r5)		; PRINT byte
      61 001074 000770                  		BR	PMSG1			;REPEAT LOOP
      62 001076 000163  177776          PMSGE:		jmp -2(r3)
      63                                
      64                                
      65 001102    110     145     154  MSG:		.ASCIZ /Hello, world!/<CR><LF>
         001105    154     157     054  
         001110    040     167     157  
         001113    162     154     144  
         001116    041     015     012  
         001121    000                  
      66 001122    115     117     126  sgnon:		.ASCIZ /MOVER moves your code at 10000-10776(8) to your desired destination/<CR><LF>
         001125    105     122     040  
         001130    155     157     166  
         001133    145     163     040  
         001136    171     157     165  
         001141    162     040     143  
         001144    157     144     145  
         001147    040     141     164  
         001152    040     061     060  
         001155    060     060     060  
         001160    055     061     060  
         001163    067     067     066  
         001166    050     070     051  
         001171    040     164     157  
         001174    040     171     157  
         001177    165     162     040  
         001202    144     145     163  
         001205    151     162     145  
         001210    144     040     144  
         001213    145     163     164  
         001216    151     156     141  
         001221    164     151     157  
         001224    156     015     012  
         001227    000                  
      67 001230    120     154     145  msg1:		.ASCIZ /Please, enter destination address in octal:/
         001233    141     163     145  
         001236    054     040     145  
         001241    156     164     145  
         001244    162     040     144  
         001247    145     163     164  
         001252    151     156     141  
         001255    164     151     157  
         001260    156     040     141  
         001263    144     144     162  
         001266    145     163     163  
         001271    040     151     156  
         001274    040     157     143  
         001277    164     141     154  
         001302    072     000          
      68                                .end
      69                                
      69                                
